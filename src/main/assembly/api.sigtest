#Signature file v4.1
#Version 1.0-SNAPSHOT

CLSS public final com.dukescript.api.kt.Action
cons public init()
supr java.lang.Object

CLSS public com.dukescript.api.kt.Model
cons public init(com.dukescript.api.kt.impl.Token)
 anno 1 org.jetbrains.annotations.NotNull(java.lang.String value="")
innr public abstract interface static Provider
innr public final static Readable
innr public final static Writable
meth public final <%0 extends java.lang.Object> com.dukescript.api.kt.Model$Readable<java.util.List<{%%0}>> observableList(java.lang.Class<{%%0}>,{%%0}[],kotlin.jvm.functions.Function0<kotlin.Unit>)
 anno 0 org.jetbrains.annotations.NotNull(java.lang.String value="")
 anno 1 org.jetbrains.annotations.NotNull(java.lang.String value="")
 anno 2 org.jetbrains.annotations.NotNull(java.lang.String value="")
 anno 3 org.jetbrains.annotations.Nullable(java.lang.String value="")
meth public final <%0 extends java.lang.Object> com.dukescript.api.kt.Model$Writable<{%%0}> observable(java.lang.Class<{%%0}>,{%%0},kotlin.jvm.functions.Function0<kotlin.Unit>)
 anno 0 org.jetbrains.annotations.NotNull(java.lang.String value="")
 anno 1 org.jetbrains.annotations.NotNull(java.lang.String value="")
 anno 3 org.jetbrains.annotations.Nullable(java.lang.String value="")
supr java.lang.Object

CLSS public abstract interface static com.dukescript.api.kt.Model$Provider
 outer com.dukescript.api.kt.Model
meth public abstract com.dukescript.api.kt.Model getObjs()
 anno 0 org.jetbrains.annotations.NotNull(java.lang.String value="")

CLSS public final static com.dukescript.api.kt.Model$Readable<%0 extends java.lang.Object>
 outer com.dukescript.api.kt.Model
cons public init(kotlin.jvm.functions.Function2<? super com.dukescript.api.kt.Model$Provider,? super kotlin.reflect.KProperty<?>,? extends kotlin.properties.ReadOnlyProperty<? super com.dukescript.api.kt.Model$Provider,? extends {com.dukescript.api.kt.Model$Readable%0}>>)
 anno 1 org.jetbrains.annotations.NotNull(java.lang.String value="")
meth public final kotlin.properties.ReadOnlyProperty<com.dukescript.api.kt.Model$Provider,{com.dukescript.api.kt.Model$Readable%0}> provideDelegate(com.dukescript.api.kt.Model$Provider,kotlin.reflect.KProperty<?>)
 anno 0 org.jetbrains.annotations.NotNull(java.lang.String value="")
 anno 1 org.jetbrains.annotations.NotNull(java.lang.String value="")
 anno 2 org.jetbrains.annotations.NotNull(java.lang.String value="")
supr java.lang.Object
hfds factory

CLSS public final static com.dukescript.api.kt.Model$Writable<%0 extends java.lang.Object>
 outer com.dukescript.api.kt.Model
cons public init(kotlin.jvm.functions.Function2<? super com.dukescript.api.kt.Model$Provider,? super kotlin.reflect.KProperty<?>,? extends kotlin.properties.ReadWriteProperty<? super com.dukescript.api.kt.Model$Provider,{com.dukescript.api.kt.Model$Writable%0}>>)
 anno 1 org.jetbrains.annotations.NotNull(java.lang.String value="")
meth public final kotlin.properties.ReadWriteProperty<com.dukescript.api.kt.Model$Provider,{com.dukescript.api.kt.Model$Writable%0}> provideDelegate(com.dukescript.api.kt.Model$Provider,kotlin.reflect.KProperty<?>)
 anno 0 org.jetbrains.annotations.NotNull(java.lang.String value="")
 anno 1 org.jetbrains.annotations.NotNull(java.lang.String value="")
 anno 2 org.jetbrains.annotations.NotNull(java.lang.String value="")
supr java.lang.Object
hfds factory

CLSS public final com.dukescript.api.kt.Models
 anno 0 kotlin.jvm.JvmName(java.lang.String name="Models")
meth public final static <%0 extends java.lang.Object> com.dukescript.api.kt.Model$Readable<com.dukescript.api.kt.Action> actionWithData(com.dukescript.api.kt.Model$Provider,java.lang.Class<{%%0}>,kotlin.jvm.functions.Function1<? super {%%0},kotlin.Unit>)
 anno 0 org.jetbrains.annotations.NotNull(java.lang.String value="")
 anno 1 org.jetbrains.annotations.NotNull(java.lang.String value="")
 anno 2 org.jetbrains.annotations.NotNull(java.lang.String value="")
 anno 3 org.jetbrains.annotations.NotNull(java.lang.String value="")
meth public final static <%0 extends java.lang.Object> com.dukescript.api.kt.Model$Readable<{%%0}> computed(com.dukescript.api.kt.Model$Provider,kotlin.jvm.functions.Function0<? extends {%%0}>)
 anno 0 org.jetbrains.annotations.NotNull(java.lang.String value="")
 anno 1 org.jetbrains.annotations.NotNull(java.lang.String value="")
 anno 2 org.jetbrains.annotations.NotNull(java.lang.String value="")
meth public final static com.dukescript.api.kt.Model Model(com.dukescript.api.kt.Model$Provider)
 anno 0 org.jetbrains.annotations.NotNull(java.lang.String value="")
 anno 1 org.jetbrains.annotations.NotNull(java.lang.String value="")
meth public final static com.dukescript.api.kt.Model$Readable<com.dukescript.api.kt.Action> action(com.dukescript.api.kt.Model$Provider,kotlin.jvm.functions.Function0<kotlin.Unit>)
 anno 0 org.jetbrains.annotations.NotNull(java.lang.String value="")
 anno 1 org.jetbrains.annotations.NotNull(java.lang.String value="")
 anno 2 org.jetbrains.annotations.NotNull(java.lang.String value="")
supr java.lang.Object

CLSS public final com.dukescript.api.kt.Net
 anno 0 kotlin.jvm.JvmName(java.lang.String name="Net")
meth public final static <%0 extends java.lang.Object> void loadJSON(com.dukescript.api.kt.Model$Provider,java.lang.Class<{%%0}>,java.lang.String,kotlin.jvm.functions.Function1<? super java.util.List<? extends {%%0}>,kotlin.Unit>,kotlin.jvm.functions.Function1<? super java.lang.Throwable,kotlin.Unit>,java.lang.String,java.lang.Object,java.util.Map<java.lang.String,java.lang.String>,java.lang.String)
 anno 1 org.jetbrains.annotations.NotNull(java.lang.String value="")
 anno 2 org.jetbrains.annotations.NotNull(java.lang.String value="")
 anno 3 org.jetbrains.annotations.NotNull(java.lang.String value="")
 anno 4 org.jetbrains.annotations.NotNull(java.lang.String value="")
 anno 5 org.jetbrains.annotations.Nullable(java.lang.String value="")
 anno 6 org.jetbrains.annotations.NotNull(java.lang.String value="")
 anno 7 org.jetbrains.annotations.Nullable(java.lang.String value="")
 anno 8 org.jetbrains.annotations.Nullable(java.lang.String value="")
 anno 9 org.jetbrains.annotations.Nullable(java.lang.String value="")
supr java.lang.Object

CLSS public java.lang.Object
cons public init()
meth protected java.lang.Object clone() throws java.lang.CloneNotSupportedException
meth protected void finalize() throws java.lang.Throwable
meth public boolean equals(java.lang.Object)
meth public final java.lang.Class<?> getClass()
meth public final void notify()
meth public final void notifyAll()
meth public final void wait() throws java.lang.InterruptedException
meth public final void wait(long) throws java.lang.InterruptedException
meth public final void wait(long,int) throws java.lang.InterruptedException
meth public int hashCode()
meth public java.lang.String toString()

CLSS public abstract interface java.lang.annotation.Annotation
meth public abstract boolean equals(java.lang.Object)
meth public abstract int hashCode()
meth public abstract java.lang.Class<? extends java.lang.annotation.Annotation> annotationType()
meth public abstract java.lang.String toString()

CLSS public abstract interface !annotation java.lang.annotation.Documented
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[ANNOTATION_TYPE])
intf java.lang.annotation.Annotation

CLSS public abstract interface !annotation java.lang.annotation.Retention
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[ANNOTATION_TYPE])
intf java.lang.annotation.Annotation
meth public abstract java.lang.annotation.RetentionPolicy value()

CLSS public abstract interface !annotation java.lang.annotation.Target
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[ANNOTATION_TYPE])
intf java.lang.annotation.Annotation
meth public abstract java.lang.annotation.ElementType[] value()

CLSS public abstract interface !annotation kotlin.Metadata
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE])
 anno 0 kotlin.annotation.Target(kotlin.annotation.AnnotationTarget[] allowedTargets=[CLASS])
intf java.lang.annotation.Annotation
meth public abstract !hasdefault int k()
meth public abstract !hasdefault int xi()
meth public abstract !hasdefault int[] bv()
meth public abstract !hasdefault int[] mv()
meth public abstract !hasdefault java.lang.String pn()
meth public abstract !hasdefault java.lang.String xs()
meth public abstract !hasdefault java.lang.String[] d1()
meth public abstract !hasdefault java.lang.String[] d2()

CLSS public abstract interface !annotation kotlin.annotation.MustBeDocumented
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[ANNOTATION_TYPE])
 anno 0 kotlin.annotation.Target(kotlin.annotation.AnnotationTarget[] allowedTargets=[ANNOTATION_CLASS])
intf java.lang.annotation.Annotation

CLSS public abstract interface !annotation kotlin.annotation.Retention
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[ANNOTATION_TYPE])
 anno 0 kotlin.annotation.Target(kotlin.annotation.AnnotationTarget[] allowedTargets=[ANNOTATION_CLASS])
intf java.lang.annotation.Annotation
meth public abstract !hasdefault kotlin.annotation.AnnotationRetention value()

CLSS public abstract interface !annotation kotlin.annotation.Target
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[ANNOTATION_TYPE])
 anno 0 kotlin.annotation.Target(kotlin.annotation.AnnotationTarget[] allowedTargets=[ANNOTATION_CLASS])
intf java.lang.annotation.Annotation
meth public abstract kotlin.annotation.AnnotationTarget[] allowedTargets()

CLSS public abstract interface !annotation kotlin.jvm.JvmName
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=CLASS)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD])
 anno 0 kotlin.annotation.Target(kotlin.annotation.AnnotationTarget[] allowedTargets=[FUNCTION, PROPERTY_GETTER, PROPERTY_SETTER, FILE])
intf java.lang.annotation.Annotation
meth public abstract java.lang.String name()

